---
import { ViewTransitions } from "astro:transitions";
import Footer from "../components/elements/Footer.astro";
import Navbar from "../components/elements/Navbar.astro";

export interface Props {
  title: string;
}

const { title } = Astro.props;

    // const slideAnim = {
    //   old: {
    //     name: 'slideDown',
    //     duration: '0.3s',
    //     easing: 'ease-out',
    //     fillMode: 'backwards',
    //   },
    //   new: {
    //     name: 'slideUp',
    //     duration: '0.3s',
    //     delay: `${index * 0.1 + 0.1}s`,
    //     easing: 'ease-out',
    //     fillMode: 'backwards',
    //   },
    // }
    // const verticalSlide = {
    //   forwards: animSlideUp,
    //   backwards: animSlideUp,
    // }
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content="Web Development in Sorsogon City">
    <title>{title}</title>
    <link
      href="https://fonts.googleapis.com/css2?family=Raleway:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />
    <script src="/node_modules/flowbite/dist/flowbite.min.js" defer></script>
    <ViewTransitions />
  </head>
  <body class="overflow-hidden overflow-y-auto bg-body">
   <div class="overflow-x-clip	">
      <div class="absolute w-full lg:w-1/2 inset-y-0 lg:right-0 pointer-events-none	">
        <!-- <span class="absolute -left-6 md:left-4 top-24 lg:top-28 w-24 h-24 rotate-90 skew-x-12 rounded-3xl bg-green-400 blur-xl opacity-60 lg:opacity-95 lg:block hidden"></span> -->
        <!-- <span class="absolute right-4 bottom-12 w-24 h-24 rounded-3xl bg-primary blur-xl opacity-80"></span> -->
      </div> 
      <span class="pointer-events-none w-4/12 lg:w-2/12 aspect-square bg-gradient-to-tr from-primary to-green-400 absolute -top-5 lg:left-0 rounded-full skew-y-12 blur-2xl opacity-40 skew-x-12 rotate-90"></span>
 
    <Navbar />
    <slot />
    <Footer />
  </div>
  </body>

  <script>
    function applyTheme() {
      const switchTheme = document.querySelector("[data-switch-theme]");
      if (
        localStorage.getItem("appTheme") === "dark" ||
        (!("appTheme" in localStorage) &&
          window.matchMedia("(prefers-color-scheme: dark)").matches)
      ) {
        document.documentElement.classList.add("dark");
      } else {
        document.documentElement.classList.remove("dark");
      }
  
      if (switchTheme) {
        switchTheme.addEventListener("click", (e) => {
          e.preventDefault();
          const doc = document.documentElement;
          if (doc) {
            if (localStorage.getItem("appTheme")) {
              if (localStorage.getItem("appTheme") === "light") {
                doc.classList.add("dark");
                localStorage.setItem("appTheme", "dark");
              } else {
                doc.classList.remove("dark");
                localStorage.setItem("appTheme", "light");
              }
            } else {
              if (doc.classList.contains("dark")) {
                doc.classList.remove("dark");
                localStorage.setItem("appTheme", "light");
              } else {
                doc.classList.add("dark");
                localStorage.setItem("appTheme", "dark");
              }
            }
          }
        });
      }
    }
  
    function applyMenuToggle() {
      const toggleMenu = document.querySelector("[data-toggle-nav]");
      const navbar = document.querySelector("[data-navbar]");
      const overlayNav = document.querySelector("[data-nav-overlay]");
  
      if (toggleMenu && navbar && overlayNav) {
        toggleMenu.addEventListener("click", (e) => {
          e.preventDefault();
          if (toggleMenu.getAttribute("data-open-nav") === "false") {
            toggleMenu.setAttribute("data-open-nav", "true");
            overlayNav.setAttribute("data-is-visible", "true");
            document.body.classList.add("!overflow-y-hidden");
            navbar.style.height = `${navbar.scrollHeight}px`;
          } else {
            toggleMenu.setAttribute("data-open-nav", "false");
            overlayNav.setAttribute("data-is-visible", "false");
            document.body.classList.remove("!overflow-y-hidden");
            navbar.style.height = "0px";
          }
        });
  
        navbar.addEventListener("click", () => {
          toggleMenu.setAttribute("data-open-nav", "false");
          overlayNav.setAttribute("data-is-visible", "false");
          document.body.classList.remove("!overflow-y-hidden");
          navbar.style.height = "0px";
        });
  
        overlayNav.addEventListener("click", () => {
          toggleMenu.setAttribute("data-open-nav", "false");
          overlayNav.setAttribute("data-is-visible", "false");
          document.body.classList.remove("!overflow-y-hidden");
          navbar.style.height = "0px";
        });
      }
    }

    
  
    // Apply theme and menu toggle on initial load
    applyTheme();
    applyMenuToggle();
  
    // Reapply theme and menu toggle after every page swap
    document.addEventListener('astro:after-swap', () => {
      applyTheme();
      applyMenuToggle();
    });
  </script>



  <!-- <script>
    const switchTheme = document.querySelector(
      "[data-switch-theme]"
    ) as HTMLButtonElement;

    if (
      localStorage.getItem("appTheme") === "dark" ||
      (!("appTheme" in localStorage) &&
        window.matchMedia("(prefers-color-scheme: dark)").matches)
    ) {
      document.documentElement.classList.add("dark");
    } else {
      document.documentElement.classList.remove("dark");
    }
    if (switchTheme) {
      switchTheme.addEventListener("click", (e) => {
        e.preventDefault();
        const doc = document.documentElement;
        if (doc) {
          if (localStorage.getItem("appTheme")) {
            if (localStorage.getItem("appTheme") === "light") {
              doc.classList.add("dark");
              localStorage.setItem("appTheme", "dark");
            } else {
              document.documentElement.classList.remove("dark");
              localStorage.setItem("appTheme", "light");
            }
          } else {
            if (doc.classList.contains("dark")) {
              doc.classList.remove("dark");
              localStorage.setItem("appTheme", "light");
            } else {
              doc.classList.add("dark");
              localStorage.setItem("appTheme", "dark");
            }
          }
        }
      });
    }
  </script>

  
  <script>
    const toggleMenu = document.querySelector(
      "[data-toggle-nav]"
    ) as HTMLButtonElement;
    const navbar = document.querySelector("[data-navbar]") as HTMLDivElement;
    const overlayNav = document.querySelector(
      "[data-nav-overlay]"
    ) as HTMLDivElement;
    if (toggleMenu) {
      toggleMenu.addEventListener("click", e => {
        e.preventDefault();
        if (toggleMenu.getAttribute("data-open-nav") === "false") {
          toggleMenu.setAttribute("data-open-nav", "true");
          overlayNav.setAttribute("data-is-visible", "true");
          document.body.classList.add("!overflow-y-hidden");
		  navbar.style.height = `${navbar.scrollHeight}px`

        }else{
			toggleMenu.setAttribute("data-open-nav", "false");
        	overlayNav.setAttribute("data-is-visible", "false");
        	document.body.classList.remove("!overflow-y-hidden");
		  	navbar.style.height = "0px"
		}
		
        
      });

      navbar.addEventListener("click", () => {
        toggleMenu.setAttribute("data-open-nav", "false");
        overlayNav.setAttribute("data-is-visible", "false");
        document.body.classList.remove("!overflow-y-hidden");
		  	navbar.style.height = "0px"
      });

      overlayNav.addEventListener("click", () => {
        toggleMenu.setAttribute("data-open-nav", "false");
        	overlayNav.setAttribute("data-is-visible", "false");
        	document.body.classList.remove("!overflow-y-hidden");
		  	navbar.style.height = "0px"
      });
    }
  </script> -->
</html>
<style is:global>
  :root {
    --color-bg: 255 255 255;
    --color-border: 255 255 255;
    --color-box: 255 255 255;
    --box-border: 229 231 235;
    --box-sd: 226 232 240 / 0.5;
	--heading-1:  23 37 84;
	--heading-2: 31 41 55;
	--heading-3: 55 65 81;
  }

  .dark {
    --color-bg: 3 7 18;
    --color-box: 17 24 39;
    --box-border: 243 244 246/0.1;
    --box-sd: transparent;

	
	--heading-1:  255 255 255;
	--heading-2:  243 244 246;
	--heading-3:  209 213 219;
  }

  html{
    scroll-behavior: smooth;
  }
  body {
    font-family: "Raleway", sans-serif;
  }

  [data-toggle-nav][data-open-nav="true"] #line1 {
    transform: translateY(0.375rem) rotate(40deg);
  }
  [data-toggle-nav][data-open-nav="true"] #line2 {
    transform: scaleX(0);
    opacity: 0;
  }
  [data-toggle-nav][data-open-nav="true"] #line3 {
    transform: translateY(-0.375rem) rotate(-40deg);
  }

  
  [data-nav-overlay][data-is-visible="true"] {
    visibility: visible;
    display: flex;
  }

  @keyframes slideUp {
  from {
    transform: translateY(20%);
    opacity: 0;
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
@keyframes slideDown {
  from {
    transform: translateY(0);
    opacity: 1;
  }
  to {
    opacity: 0;
    transform: translateY(20%);
  }
}
</style>
